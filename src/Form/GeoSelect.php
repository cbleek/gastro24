<?php

namespace Gastro24\Form;

use Core\Form\Element\Select;
use Core\Form\HeadscriptProviderInterface;
use Core\Form\Hydrator\HydratorStrategyProviderInterface;
use Core\Form\Hydrator\HydratorStrategyProviderTrait;

/**
 * GeoSelect.php
 *
 * @author Stefanie Drost <contact@stefaniedrost.com>
 */
class GeoSelect extends Select implements HeadscriptProviderInterface, HydratorStrategyProviderInterface
{
    use HydratorStrategyProviderTrait;

    /**
     * @var bool
     */
    protected $disableInArrayValidator = true;

    private $headscripts = [
        'modules/Gastro24/js/geoselect.js'
    ];

    public function setOptions($options)
    {
        parent::setOptions($options);

        if (isset($options['location_entity'])) {
            $this->getHydratorStrategy()->setLocationEntityPrototype($options['location_entity']);
        }
    }

    public function setValue($value)
    {
        $attrValue = is_array($value)
            ? \Zend\Json\Json::encode($value)
            : $value;

        $this->setAttribute('data-val', $attrValue);

        return parent::setValue($value); // TODO: Change the autogenerated stub
    }


    /**
     * Sets the array of script names.
     *
     * @param string[] $scripts
     *
     * @return GeoSelect
     */
    public function setHeadscripts(array $scripts)
    {
        $this->headscripts = $scripts;

        return $this;
    }

    /**
     * Gets the array of script names.
     *
     * @return string[]
     */
    public function getHeadscripts()
    {
        return $this->headscripts;
    }


    public function init()
    {
        $this->setAttributes([
            'data-placeholder' => /*@translate*/ 'Location',
            'data-autoinit' => false,
            'data-clear-on-reset' => true,
            'class' => 'geoselect',
        ]);
    }
}